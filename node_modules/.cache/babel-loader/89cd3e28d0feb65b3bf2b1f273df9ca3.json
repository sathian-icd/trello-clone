{"ast":null,"code":"import _objectSpread from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"A:/trello_clone/trello-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"A:\\\\trello_clone\\\\trello-1\\\\src\\\\components\\\\Card.js\";\nimport \"../styles/Card.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardEditor from \"./CardEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Card = /*#__PURE__*/function (_Component) {\n  _inherits(Card, _Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      hover: false,\n      editing: false\n    };\n\n    _this.startHover = function () {\n      return _this.setState({\n        hover: true\n      });\n    };\n\n    _this.endHover = function () {\n      return _this.setState({\n        hover: false\n      });\n    };\n\n    _this.startEditing = function () {\n      return _this.setState({\n        hover: false,\n        editing: true,\n        text: _this.props.card.text\n      });\n    };\n\n    _this.endEditing = function () {\n      return _this.setState({\n        hover: false,\n        editing: false\n      });\n    };\n\n    _this.editCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(text) {\n        var _this$props, card, dispatch;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, card = _this$props.card, dispatch = _this$props.dispatch;\n\n                _this.endEditing();\n\n                dispatch({\n                  type: \"CHANGE_CARD_TEXT\",\n                  payload: {\n                    cardId: card._id,\n                    cardText: text\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteCard = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$props2, listId, card, dispatch;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = _this.props, listId = _this$props2.listId, card = _this$props2.card, dispatch = _this$props2.dispatch;\n\n              if (window.confirm(\"Are you sure to delete this card?\")) {\n                dispatch({\n                  type: \"DELETE_CARD\",\n                  payload: {\n                    cardId: card._id,\n                    listId: listId\n                  }\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          card = _this$props3.card,\n          index = _this$props3.index;\n      var _this$state = this.state,\n          hover = _this$state.hover,\n          editing = _this$state.editing;\n\n      if (!editing) {\n        return /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: card._id,\n          index: index,\n          children: function children(provided, snapshot) {\n            return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({\n              ref: provided.innerRef\n            }, provided.draggableProps), provided.dragHandleProps), {}, {\n              className: \"Card\",\n              onMouseEnter: _this2.startHover,\n              onMouseLeave: _this2.endHover,\n              children: [hover && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Card-Icons\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Card-Icon\",\n                  onClick: _this2.startEditing,\n                  children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                    name: \"create\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 21\n                  }, _this2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, _this2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, _this2), card.text]\n            }), void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, _this2);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(CardEditor, {\n          text: card.text,\n          onSave: this.editCard,\n          onDelete: this.deleteCard,\n          onCancel: this.endEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this);\n      }\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    card: state.cardsById[ownProps.cardId]\n  };\n};\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["A:/trello_clone/trello-1/src/components/Card.js"],"names":["React","Component","connect","Draggable","CardEditor","Card","state","hover","editing","startHover","setState","endHover","startEditing","text","props","card","endEditing","editCard","dispatch","type","payload","cardId","_id","cardText","deleteCard","listId","window","confirm","index","provided","snapshot","innerRef","draggableProps","dragHandleProps","mapStateToProps","ownProps","cardsById"],"mappings":"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","sourcesContent":["import \"../styles/Card.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport CardEditor from \"./CardEditor\";\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    hover: false,\r\n    editing: false\r\n  };\r\n\r\n  startHover = () => this.setState({ hover: true });\r\n  endHover = () => this.setState({ hover: false });\r\n\r\n  startEditing = () =>\r\n    this.setState({\r\n      hover: false,\r\n      editing: true,\r\n      text: this.props.card.text\r\n    });\r\n\r\n  endEditing = () => this.setState({ hover: false, editing: false });\r\n\r\n  editCard = async text => {\r\n    const { card, dispatch } = this.props;\r\n\r\n    this.endEditing();\r\n\r\n    dispatch({\r\n      type: \"CHANGE_CARD_TEXT\",\r\n      payload: { cardId: card._id, cardText: text }\r\n    });\r\n  };\r\n\r\n  deleteCard = async () => {\r\n    const { listId, card, dispatch } = this.props;\r\n\r\n    if (window.confirm(\"Are you sure to delete this card?\")) {\r\n      dispatch({\r\n        type: \"DELETE_CARD\",\r\n        payload: { cardId: card._id, listId }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { card, index } = this.props;\r\n    const { hover, editing } = this.state;\r\n\r\n    if (!editing) {\r\n      return (\r\n        <Draggable draggableId={card._id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              className=\"Card\"\r\n              onMouseEnter={this.startHover}\r\n              onMouseLeave={this.endHover}\r\n            >\r\n              {hover && (\r\n                <div className=\"Card-Icons\">\r\n                  <div className=\"Card-Icon\" onClick={this.startEditing}>\r\n                    <ion-icon name=\"create\" />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {card.text}\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    } else {\r\n      return (\r\n        <CardEditor\r\n          text={card.text}\r\n          onSave={this.editCard}\r\n          onDelete={this.deleteCard}\r\n          onCancel={this.endEditing}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  card: state.cardsById[ownProps.cardId]\r\n});\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n"]},"metadata":{},"sourceType":"module"}